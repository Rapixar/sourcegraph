BEGIN;

-- Create the OOB migration according to doc/dev/background-information/oobmigrations.md
INSERT INTO out_of_band_migrations (id, team, component, description, introduced_version_major, introduced_version_minor, non_destructive)
VALUES (
    12,                                             -- This must be consistent across all Sourcegraph instances
    'apidocs',                                      -- Team owning migration
    'codeintel-db.lsif_data_documentation_search',  -- Component being migrated
    'Index API docs for search',                    -- Description
    3,                                              -- The next minor release (major version)
    32,                                             -- The next minor release (minor version)
    true                                            -- Can be read with previous version without down migration
)
ON CONFLICT DO NOTHING;

-- We're going to create the new lsif_data_documentation_search table. This table will have a
-- trigram index and will be data decoded from the GOB encoded lsif_data_documentation_pages.data
-- field, hence an OOB migration is needed as that table is quite large (and not decodable in SQL
-- alone.)
CREATE TABLE IF NOT EXISTS lsif_data_documentation_search (
    dump_id integer NOT NULL,
    path_id TEXT NOT NULL,
    repo_name TEXT NOT NULL,
    search_key TEXT NOT NULL,
    label TEXT NOT NULL,
    detail TEXT NOT NULL,
    tags TEXT NOT NULL,
    repo_id integer NOT NULL,
    repo_private boolean NOT NULL
);

ALTER TABLE lsif_data_documentation_search ADD PRIMARY KEY (dump_id, path_id);

CREATE EXTENSION IF NOT EXISTS pg_trgm;
CREATE INDEX lsif_data_documentation_search_repo_name_trgm ON lsif_data_documentation_search USING gin(repo_name gin_trgm_ops);
CREATE INDEX lsif_data_documentation_search_search_key_trgm ON lsif_data_documentation_search USING gin(search_key gin_trgm_ops);
CREATE INDEX lsif_data_documentation_search_label_trgm ON lsif_data_documentation_search USING gin(label gin_trgm_ops);
CREATE INDEX lsif_data_documentation_search_tags_trgm ON lsif_data_documentation_search USING gin(tags gin_trgm_ops);
CREATE INDEX lsif_data_documentation_search_repo_id_idx ON lsif_data_documentation_search USING BTREE(repo_id);
CREATE INDEX lsif_data_documentation_search_repo_private_idx ON lsif_data_documentation_search USING BTREE(repo_private);

COMMENT ON TABLE lsif_data_documentation_search IS 'A trigram index over documentation for search';
COMMENT ON COLUMN lsif_data_documentation_search.dump_id IS 'The identifier of the associated dump in the lsif_uploads table (state=completed).';
COMMENT ON COLUMN lsif_data_documentation_search.path_id IS 'The fully qualified documentation page path ID, e.g. including "#section". See GraphQL codeintel.schema:documentationPage for what this is.';
COMMENT ON COLUMN lsif_data_documentation_search.repo_name IS 'The name of the repository containing this search key.';
COMMENT ON COLUMN lsif_data_documentation_search.search_key IS 'The search key generated by the indexer, e.g. mux.Router.ServeHTTP. It is language-specific, and likely unique within a repository (but not always.) See protocol/documentation.go:Documentation.SearchKey';
COMMENT ON COLUMN lsif_data_documentation_search.label IS 'The label string of the result, e.g. a one-line function signature. See protocol/documentation.go:Documentation';
COMMENT ON COLUMN lsif_data_documentation_search.detail IS 'The detail string (e.g. the full function signature and its docs). See protocol/documentation.go:Documentation';
COMMENT ON COLUMN lsif_data_documentation_search.tags IS 'A space separated list of tags from the documentation node, starting with a supplemental programming language tag. See protocol/documentation.go:Documentation';
COMMENT ON COLUMN lsif_data_documentation_search.repo_id IS 'The repo ID, from the main app DB repo table. Used to ensure when updating public/private status that we are referencing concretely the same repository. Used to search over a select set of private repos by ID.';
COMMENT ON COLUMN lsif_data_documentation_search.repo_private IS 'Whether or not the repository is private. Private repositories require expensive ACL checks and must be searched separately.';

COMMIT;
